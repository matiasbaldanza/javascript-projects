@use '_animations';
@import url('https://fonts.googleapis.com/css2?family=Concert+One&display=swap');


// TODO: fix vertical resizing
// TODO: fix zoom resizing
// TODO: fix text resizing

$color-primary: #39B5E0;
$color-secondary: #A31ACB;
$color-secondary-darker: #510d65;
$color-secondary-lighter: #FF78F0;
$color-contrast: #F5EA5A;

$color-border: $color-secondary;
$color-cross: $color-primary;
$color-circle: $color-secondary-lighter;
$color-mark-hover: #B0B0B088;
$lower-height: 5px;
$raise-height: calc($lower-height * -1);

$cell-size: 100%;
$mark-size: 70%;

$border-width: Min(0.75vw, 6px);


$corner-elements: 1rem;
$shadow-button: 0px $lower-height 0px 0px $color-secondary-darker;
$shadow-text: 0px 4px 0px $color-secondary;
$shadow-text-h1: 0px 7px 0px $color-contrast;
$shadow-marks: $lower-height $lower-height 0px $color-contrast;

$xl-text: 7rem;
$lg-text: 4rem;
$md-text: 3rem;
$sm-text: 2rem;

// RESET

*, *::after, *::before { 
    box-sizing: border-box;
}

:root { 
    font-size: 62.5%;
    font-family: 'Concert One', sans-serif;
}

body {
    background-color: $color-secondary-lighter;
    margin: 0;
    min-height: 100vh;
    
    display: flex;
    flex-direction: column;
    justify-content: center;
}

h1 {
    font-size: $lg-text;
    // Calculated in https://royalfig.github.io/fluid-typography-calculator/
    font-size: clamp($lg-text, 2.3rem + 7.15vw, $xl-text);
    color: $color-primary;
    margin: 0;
    text-shadow: $shadow-text-h1;
}

button {
    font-size: $md-text;
    font-family: inherit;
    padding: 1rem 1.5rem;
    margin-top: 1rem;
    border-radius: $corner-elements;
    border: none;
    color: white;
    background-color: $color-secondary;
    box-shadow: $shadow-button;
}

button:active {
    transform: translatey($lower-height);
    box-shadow: none;
}

.container {
    margin: 0 auto;
    padding: 2rem;
    border-radius: 2rem;
    background-color: white;
    width: clamp(280px, 80vw, 750px);
    box-shadow: 0px 2rem 0px calc($lower-height * -1) $color-secondary;
    
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    gap: 2rem;
    
    text-align: center;
}

// INTERFACE

dialog {
    color: white;
    font-size: $lg-text;
    text-shadow: $shadow-text;
    
    padding: 2rem;
    background: $color-secondary-lighter;
    border-radius: $corner-elements;
    border-width: 0px;

    box-shadow: 0px 2rem 0px calc($lower-height * -1) $color-secondary;
}

dialog::backdrop {
    backdrop-filter: blur(5px) grayscale(50%);
}

.container {

    & .scores {
        display: flex;
        flex-direction: row;
        justify-content: space-around;
        align-items: center;
        flex-wrap: nowrap;
        
        // Calculated in https://royalfig.github.io/fluid-typography-calculator/
        font-size: $sm-text;
        font-size: clamp($sm-text, 1.2rem + 2.38vw, $md-text);

        & button {
          font: inherit;
        }

        & .score-crosses {
            color: $color-cross;
        }

        & .score-circles {
            color: $color-circle;
        }

    }
}

// GAME ASSETS

.board {
    margin: 0 auto;
    width: 90%;
    aspect-ratio: 1 / 1;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(3, 1fr);

    & .cell {
        border: $border-width solid $color-border;    
        cursor: pointer;
    }

    & :nth-child(-n+3) {
        border-top: none;
    }
    
    & :nth-child(3n+1) {
        border-left: none;
    }
    
    & :nth-child(3n+3) {
        border-right: none;
    }
    
    & :nth-last-child(-n+3) {
        border-bottom: none;
    }
}

.cross::before,
.circle::before {
  content: "";
  display: block;
  height: 100%;
  // EXAMPLE TO UNDERSTAND THE SHORTHAND
  /* background-image: var(--background-image);
  background-size: 80%;
  background-repeat: no-repeat;
  background-position: center; */
  background: no-repeat center / 80% var(--background-image);
  transition: 50ms ease-out;
}

.cross-plays,
.cross {
  --background-image: url("assets/cross.svg");
}

.circle-plays,
.circle {
  --background-image: url("assets/circle.svg");
}

/* Marks' :hover states */

.cell:not(.cross):not(.circle):hover::before {
  --shadow-offset-x: min(3px, 1vw);
  --shadow-offset-y: min(7px, 1.2vw);
  content: "";
  display: block;
  height: 100%;
  background: no-repeat center / 80% var(--background-image);
  transform: translate(-1vw, -1vw);
  filter: drop-shadow(var(--shadow-offset-x) var(--shadow-offset-y) 0 $color-mark-hover);
}